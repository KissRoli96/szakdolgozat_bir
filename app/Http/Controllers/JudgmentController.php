<?php

namespace App\Http\Controllers;

use App\Models\Theses;
use Illuminate\Auth\Access\AuthorizationException;
use Illuminate\Support\Facades\Auth;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;


class JudgmentController extends Controller
{
    public function callAction($method, $parameters)
    {
        if (!Auth::hasRole('department_leader')) {

            throw new AuthorizationException('Nem vagy tanszékvezető!');
        }

        return parent::callAction($method, $parameters); // TODO: Change the autogenerated stub
    }

    public  function approve($id)
    {

        $thesis = $this->findById($id);

        $thesis->status = Theses::STATUS_ACCEPTED;

        if ($thesis->save()) {
            request()->session()->flash('success', 'A szakdolgozatot sikeresen modósitottam');
            return redirect('/judgment/view/' . $id);
        }

        request()->session()->flash('error', 'Belső hiba történt');
        return back();


    }

    public function deny($id)
    {

        $thesis = $this->findById($id);

        $thesis->status = Theses::STATUS_DENIED;

        if ($thesis->save()) {
            request()->session()->flash('success', 'A szakdolgozatot sikeresen modósitottam');
            return redirect('/judgment/view/' . $id);
        }

        request()->session()->flash('error', 'Belső hiba történt');
        return back();
    }

    public function index()
    {

            $theses = Theses::query()->orderBy('status')->get();

            return view('judgements.index', [
               'theses' => $theses
            ]);
    }

    public function view($id)
    {
        $thesis = $this->findById($id);

        return view('judgements.profile', ['thesis' => $thesis]);
    }

    private function findById($id)
    {
        $thesis = Theses::where('id', $id)->first();

        if (empty($thesis)) {
            throw new NotFoundHttpException('A szakdolgozat nem található');
        }

        return $thesis;
    }

}
